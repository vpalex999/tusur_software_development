# -*- coding: utf-8 -*-

""" Модуль обработки категорий АОН по заданным правилам """


class Category(object):
    """
    Класс для вычисления категории АОН.

    Аргументы:
    - subscriber_set (list) -- принимает список свойств в которых содержатся
      атрибуты номера, определяющие категорию.
    - template_set (dict) -- шаблон с правилами перевода категорий.
    - number_dn (str) -- Необязательный аргумент. Принимает номер в строковом
      формате для которого осуществяется обработка котегорий.

    Функция self.category - производит поиск id категории по ключу в
    правилах *template_set* в списке свойств номера *subscriber_set*.
    Ключ может быть составным, для этого слова в ключе разделяются пробелами:
    - {"SR4": "56"} -- несоставной ключ.
    - {"CPC HOTEL": "62"} -- составной ключ.
    Если ключ -- составной, то поиск будет успешным, если в *subscriber_set*
    будут присутствовать оба отрибута составного ключа, например:
    ['tsrd', 'SR4', 'RVT', 'CPC', 'HOTEL']
    """

    _ims_category = [
        {'id': '56', 'aon': '1'},
        {'id': '62', 'aon': '2'},
        {'id': '65', 'aon': '3'},
        {'id': '63', 'aon': '4'},
        {'id': '57', 'aon': '5'},
        {'id': '58', 'aon': '6'},
        {'id': '59', 'aon': '7'},
        {'id': '64', 'aon': '8'},
        {'id': '60', 'aon': '9'},
        {'id': '61', 'aon': '0'}
    ]

    def __init__(self, set_category):
        """ 
        Аргументы:
        - set_category (dict) -- шаблон с правилами перевода категорий.
        """
        self.set_category = set_category
        self.list_mapping = set_category['Providers']
        self.default = set_category['Default'][0]

    def __call__(self, subscriber_options):
        """
        Аргументы:
        ----------
        subscriber_options (list) -- принимает список свойств в которых содержатся
          атрибуты номера, определяющие категорию.

        Возврат:
        --------
        str -- номер категории в формате VIMS или категорию, определённую по умолчанию
        """
        return None
